[{"/Users/stevenlarsen/DevMtn/full-stack-pp/quotes/src/redux/store.js":"1","/Users/stevenlarsen/DevMtn/full-stack-pp/quotes/src/Components/DashQuotes.js":"2","/Users/stevenlarsen/DevMtn/full-stack-pp/quotes/src/Components/Form.js":"3","/Users/stevenlarsen/DevMtn/full-stack-pp/quotes/src/redux/reducer.js":"4"},{"size":219,"mtime":1606758454448,"results":"5","hashOfConfig":"6"},{"size":2007,"mtime":1606772900547,"results":"7","hashOfConfig":"6"},{"size":1384,"mtime":1606779744001,"results":"8","hashOfConfig":"6"},{"size":664,"mtime":1606779233368,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ejykwf",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/stevenlarsen/DevMtn/full-stack-pp/quotes/src/redux/store.js",[],"/Users/stevenlarsen/DevMtn/full-stack-pp/quotes/src/Components/DashQuotes.js",[],"/Users/stevenlarsen/DevMtn/full-stack-pp/quotes/src/Components/Form.js",["18","19","20"],"/Users/stevenlarsen/DevMtn/full-stack-pp/quotes/src/redux/reducer.js",[],{"ruleId":"21","severity":1,"message":"22","line":8,"column":6,"nodeType":"23","endLine":8,"endColumn":10,"suggestions":"24"},{"ruleId":"21","severity":1,"message":"25","line":8,"column":7,"nodeType":"26","endLine":8,"endColumn":9},{"ruleId":"27","severity":1,"message":"28","line":10,"column":17,"nodeType":"29","messageId":"30","endLine":10,"endColumn":25},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["31"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ObjectExpression","no-unused-vars","'setQuote' is assigned a value but never used.","Identifier","unusedVar",{"desc":"32","fix":"33"},"Update the dependencies array to be: [props]",{"range":"34","text":"35"},[203,207],"[props]"]